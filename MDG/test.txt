test     ::= ( 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* ( 'or' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* )* 'if' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* ( 'or' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* )* 'else' )* ( 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* ( 'or' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* ( 'and' 'not'* expr ( (''
           | '=='
           | '='
           | '!='
           | 'not'? 'in'
           | 'is' 'not'?) expr )* )* )* 
         | 
             lambdef )